"""
Client program that communicates with a server using the TCP protocol.
The program takes user input, sends it to the server, and prints the received response.
Additionally, it logs various actions for debugging and monitoring purposes.

Author: [Eli Penso]
Date: [31.10.25]
Version: 1.0
"""
import socket
import os
import logging

MAX_PACKET = 1024


"""
Creates a logs directory and configures the logging system for the program.

Parameters:
     None

Returns:
    None
"""
def createlogs():
    os.makedirs("logsuser", exist_ok=True)
    logging.basicConfig(filename='logsuser/program.log', filemode='w', level=logging.INFO)
    format = '%(asctime)s - %(name)s - %(levelname)s - %(message)s'


"""
Main function of the program.
Establishes a TCP connection to the server, sends user-input commands,
receives and prints the server's response, and logs the process.
The loop continues until the user enters "EXIT".

 Parameters:
    None

Returns:
    None
 """
def main():
    Action = None
    while (Action!="EXIT"):
        my_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)

        try:
            Action = input("enter action").upper()
            logging.info("recieved action")
            my_socket.connect(('127.0.0.1', 1002))
            logging.info("connected to server")
            my_socket.send(Action.encode())
            logging.info("sent action")
            response = my_socket.recv(MAX_PACKET).decode()
            logging.info("recieved response")
            print(response)

        except socket.error as err:

            print('received socket error' + str(err))
            logging.error("socket error")
        finally:
            my_socket.close()
            logging.info("closing socket")


if __name__ == '__main__':
    createlogs()
    main()
